<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-system-libpipeline" role="wrap">
  <?dbhtml filename="libpipeline.html"?>

  <sect1info condition="script">
    <productname>libpipeline</productname>
    <productnumber>&libpipeline-version;</productnumber>
    <address>&libpipeline-url;</address>
  </sect1info>

  <title>Libpipeline-&libpipeline-version;</title>

  <indexterm zone="ch-system-libpipeline">
    <primary sortas="a-Libpipeline">Libpipeline</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>Libpipeline 包包含一个以灵活和方便的方式操作子进程的管道(pipelines)的库。</para>

    <segmentedlist>
      <segtitle>&buildtime;</segtitle>
      <segtitle>&diskspace;</segtitle>

      <seglistitem>
        <seg>&libpipeline-ch6-sbu;</seg>
        <seg>&libpipeline-ch6-du;</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Libpipeline 的安装</title>

    <para>准备 Libpipeline 编译:</para>

<screen><userinput remap="configure">PKG_CONFIG_PATH=/tools/lib/pkgconfig ./configure --prefix=/usr</userinput></screen>

    <variablelist>
      <title>配置选项的含义:</title>

      <varlistentry>
        <term><parameter>PKG_CONFIG_PATH</parameter></term>
        <listitem>
          <para>使用 pkg-config 获取 <xref linkend="ch-tools-check"/> 中构建的测试库 metadata 的位置.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <variablelist>
      <title>配置选项的含义:</title>

      <varlistentry>
        <term><parameter>CHECK_CFLAGS=, CHECK_LIBS=</parameter></term>
        <listitem>
          <para>这些环境变量指定在<xref linkend="ch-tools-check"/>中构建的测试库的位置。</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>编译包:</para>

<screen><userinput remap="make">make</userinput></screen>

    <para>要测试结果，执行:</para>

<screen><userinput remap="test">make check</userinput></screen>

    <para>安装包:</para>

<screen><userinput remap="install">make install</userinput></screen>

  </sect2>

  <sect2 id="contents-libpipeline" role="content">
    <title>Libpipeline 的内容</title>

    <segmentedlist>
      <segtitle>安装的库</segtitle>

      <seglistitem>
        <seg>libpipeline.so</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">简述</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="libpipeline">
        <term><filename class="libraryfile">libpipeline</filename></term>
        <listitem>
          <para>这个库用于安全的构造子进程之间的管道</para>
          <indexterm zone="ch-system-libpipeline">
            <primary sortas="c-libpipeline">libpipeline</primary>
          </indexterm>
        </listitem>
      </varlistentry>
    </variablelist>

  </sect2>

</sect1>
