<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-system-kernfs">
  <?dbhtml filename="kernfs.html"?>

  <title>准备虚拟内核文件系统</title>

  <indexterm zone="ch-system-kernfs">
    <primary sortas="e-/dev/">/dev/*</primary>
  </indexterm>

    <para>由内核导出的各种文件系统常用于和内核本身进行通信。这些文件系统是虚拟的，不使用磁盘空间。文件系统的内容驻留在内存中。</para>

    <para>从创建用于挂载文件系统在其上的目录开始:</para>

<screen><userinput>mkdir -v $LFS/{dev,proc,sys}</userinput></screen>

  <sect2>
    <title>创建初始化设备节点</title>

    <para>当内核引导系统时，它需要一些设备节点的存在，尤其是 <filename class="devicefile">console</filename> 和 <filename class="devicefile">null</filename> 设备。设备节点必须在硬盘上创建，以便它们可以在启动 <command>udevd</command> 前，以及当 Linux 使用 <parameter>init=/bin/bash</parameter> 启动时可用。通过运行以下命令创建设备:</para>

<screen><userinput>mknod -m 600 $LFS/dev/console c 5 1
mknod -m 666 $LFS/dev/null c 1 3</userinput></screen>

  </sect2>

  <sect2 id="ch-system-bindmount">
    <title>挂载和组装 /dev</title>

      <para>使用设备组装
	  <filename class="directory">/dev</filename> 目录的推荐方法是在 <filename
      class="directory">/dev</filename> 目录上挂载一个虚拟文件系统(譬如 <systemitem
      class="filesystem">tmpfs</systemitem>)，并让设备它们被检测或访问时，在虚拟文件系统上动态创建
      设备创建通常是在引导过程中由 Udev 完成的。由于这个新的系统还没有 Udev，并且还未引导，所以需要手动挂载和组装 <filename
      class="directory">/dev</filename>。这个可以通过绑定挂在宿主系统的 <filename class="directory">/dev</filename> 目录实现。
      绑定挂载(bind mount)是一种特殊类型的挂载，能够让您创建一个目录或挂载点的镜像到某些其它的位置。使用下列命令实现:</para>

<screen><userinput>mount -v --bind /dev $LFS/dev</userinput></screen>

  </sect2>

  <sect2 id="ch-system-kernfsmount">
    <title>挂载虚拟内核文件系统</title>

      <para>现在挂载剩下的虚拟内核文件系统:</para>

<screen><userinput>mount -vt devpts devpts $LFS/dev/pts
mount -vt proc proc $LFS/proc
mount -vt sysfs sysfs $LFS/sys</userinput></screen>

      <para>在某些宿主系统中，<filename>/dev/shm</filename> 是一个指向
      <filename class="directory">/run/shm</filename> 的符号链接。
      在一个 chroot 环境中，这个临时文件系统需要从宿主文件系统独立开来装载:</para>

<screen><userinput>if [ -h $LFS/dev/shm ]; then
  link=$(readlink $LFS/dev/shm)
  mkdir -p $LFS/$link
  mount -vt tmpfs shm $LFS/$link
  unset link
else
  mount -vt tmpfs shm $LFS/dev/shm
fi</userinput></screen>

  </sect2>

</sect1>
